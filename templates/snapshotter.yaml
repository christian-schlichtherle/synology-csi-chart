{{- if $.Capabilities.APIVersions.Has "snapshot.storage.k8s.io/v1/VolumeSnapshotClass" }}
{{- with $.Values }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels: {{- include "synology-csi.labels" $ | nindent 4 }}
  name: {{ include "synology-csi.fullname" $ }}-snapshotter

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels: {{- include "synology-csi.labels" $ | nindent 4 }}
  name: {{ include "synology-csi.fullname" $ }}-snapshotter
rules:
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list", "watch", "create", "update", "patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotclasses" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents" ]
    verbs: [ "create", "get", "list", "watch", "update", "patch", "delete" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents/status" ]
    verbs: [ "update" ]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels: {{- include "synology-csi.labels" $ | nindent 4 }}
  name: {{ include "synology-csi.fullname" $ }}-snapshotter
subjects:
  - kind: ServiceAccount
    name: {{ include "synology-csi.fullname" $ }}-snapshotter
    namespace: {{ $.Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "synology-csi.fullname" $ }}-snapshotter

{{- with .snapshotter }}
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  labels:
    app: snapshotter
    {{- include "synology-csi.labels" $ | nindent 4 }}
  name: {{ include "synology-csi.fullname" $ }}-snapshotter
spec:
  selector:
    matchLabels:
      app: snapshotter
      {{- include "synology-csi.selectorLabels" $ | nindent 6 }}
  serviceName: {{ include "synology-csi.fullname" $ }}-snapshotter
  template:
    metadata:
      labels:
        app: snapshotter
        {{- include "synology-csi.selectorLabels" $ | nindent 8 }}
    spec:
      {{- with .affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: csi-snapshotter
          args:
            - --csi-address=$(ADDRESS)
            - --v=5
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          {{- with $.Values.images.snapshotter }}
          image: {{ .image }}:{{ .tag }}
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
        - name: csi-plugin
          args:
            - --client-info=/etc/synology/client-info.yaml
            - --endpoint=$(CSI_ENDPOINT)
            - --log-level=info
            - --nodeid=NotUsed
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          {{- with $.Values.images.plugin }}
          image: {{ .image }}:{{ .tag | default $.Chart.AppVersion }}
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: client-info
              mountPath: /etc/synology
              readOnly: true
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy
      hostNetwork: true
      {{- with .nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "synology-csi.fullname" $ }}-snapshotter
      {{- with .tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - {{ include "synology-csi.clientInfoSecretVolume" $ | nindent 10 }}
        - name: socket-dir
          emptyDir: { }
{{- end }}
{{- end }}
{{- end }}
